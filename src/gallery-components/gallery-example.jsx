/* 
üñºÔ∏è EJEMPLO DE USO - ProductImageGallery 
======================================

Este ejemplo muestra c√≥mo usar el componente ProductImageGallery
en tu ProductDetail o cualquier otra p√°gina.
*/

import React from 'react';
import { ProductImageGallery } from '../gallery-components/MenuComponents.jsx';
import '../gallery-components/MenuComponents.css';

// Ejemplo de uso en ProductDetail
function ProductDetailExample() {
  const product = {
    name: "Hamburguesa Deluxe",
    images: [
      { url: "https://example.com/burger1.jpg", id: "img1" },
      { url: "https://example.com/burger2.jpg", id: "img2" }, 
      { url: "https://example.com/burger3.jpg", id: "img3" }
    ]
    // O simplemente un array de strings:
    // images: [
    //   "https://example.com/burger1.jpg",
    //   "https://example.com/burger2.jpg",
    //   "https://example.com/burger3.jpg"
    // ]
  };

  return (
    <div className="product-detail">
      {/* Galer√≠a de im√°genes */}
      <div className="product-gallery-container">
        <ProductImageGallery 
          images={product.images} 
          itemName={product.name} 
          className="product-detail-gallery"
        />
      </div>
      
      {/* Resto del contenido del producto */}
      <div className="product-info">
        <h1>{product.name}</h1>
        {/* ... m√°s contenido ... */}
      </div>
    </div>
  );
}

/*
üìö CARACTER√çSTICAS DE LA GALER√çA:

‚úÖ Navegaci√≥n entre m√∫ltiples im√°genes
‚úÖ Indicadores visuales (dots)
‚úÖ Botones prev/next
‚úÖ Contador de im√°genes
‚úÖ Fallback para im√°genes faltantes
‚úÖ Responsive design
‚úÖ Lazy loading
‚úÖ Error handling

üéØ FORMATOS DE IMAGEN SOPORTADOS:

1. Array de objetos:
   images: [
     { url: "imagen1.jpg", id: "id1" },
     { url: "imagen2.jpg", id: "id2" }
   ]

2. Array de strings:
   images: ["imagen1.jpg", "imagen2.jpg"]

3. Imagen √∫nica:
   images: ["imagen.jpg"]

4. Sin im√°genes:
   images: [] // Mostrar√° placeholder

üì¶ PROPS DEL COMPONENTE:

- images: Array de im√°genes (requerido)
- itemName: Nombre del producto para alt text (requerido)
- className: Clase CSS personalizada (opcional)

üé® ESTILOS PERSONALIZABLES:

Puedes personalizar los estilos editando:
- MenuComponents.css (estilos base)
- ProductDetail.css (estilos espec√≠ficos)

Las variables CSS est√°n definidas en :root para f√°cil personalizaci√≥n.
*/
